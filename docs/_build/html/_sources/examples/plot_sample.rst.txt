.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_plot_sample.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_plot_sample.py:


Alternating text and code
=========================

Sphinx-Gallery is capable of transforming Python files into rST files
with a notebook structure. For this to be used you need to respect some syntax
rules. This example demonstrates how to alternate text and code blocks and some
edge cases. It was designed to be compared with the
:download:`source Python script <plot_sample.py>`.

This is the first text block and directly follows the header docstring above.


.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt

    from sklearn.datasets import make_multilabel_classification as make_ml_clf

    print(__doc__)

    COLORS = np.array(['!',
                       '#FF3333',  # red
                       '#0198E1',  # blue
                       '#BF5FFF',  # purple
                       '#FCD116',  # yellow
                       '#FF7216',  # orange
                       '#4DBD33',  # green
                       '#87421F'   # brown
                       ])

    # Use same random seed for multiple calls to make_multilabel_classification to
    # ensure same distributions
    RANDOM_SEED = np.random.randint(2 ** 10)


    def plot_2d(ax, n_labels=1, n_classes=3, length=50):
        X, Y, p_c, p_w_c = make_ml_clf(n_samples=150, n_features=2,
                                       n_classes=n_classes, n_labels=n_labels,
                                       length=length, allow_unlabeled=False,
                                       return_distributions=True,
                                       random_state=RANDOM_SEED)

        ax.scatter(X[:, 0], X[:, 1], color=COLORS.take((Y * [1, 2, 4]
                                                        ).sum(axis=1)),
                   marker='.')
        ax.scatter(p_w_c[0] * length, p_w_c[1] * length,
                   marker='*', linewidth=.5, edgecolor='black',
                   s=20 + 1500 * p_c ** 2,
                   color=COLORS.take([1, 2, 4]))
        ax.set_xlabel('Feature 0 count')
        return p_c, p_w_c


    _, (ax1, ax2) = plt.subplots(1, 2, sharex='row', sharey='row', figsize=(8, 4))
    plt.subplots_adjust(bottom=.15)

    p_c, p_w_c = plot_2d(ax1, n_labels=1)
    ax1.set_title('n_labels=1, length=50')
    ax1.set_ylabel('Feature 1 count')

    plot_2d(ax2, n_labels=3)
    ax2.set_title('n_labels=3, length=50')
    ax2.set_xlim(left=0, auto=True)
    ax2.set_ylim(bottom=0, auto=True)

    plt.show()

    print('The data was generated from (random_state=%d):' % RANDOM_SEED)
    print('Class', 'P(C)', 'P(w0|C)', 'P(w1|C)', sep='\t')
    for k, p, p_w in zip(['red', 'blue', 'yellow'], p_c, p_w_c.T):
        print('%s\t%0.2f\t%0.2f\t%0.2f' % (k, p, p_w[0], p_w[1]))


.. image:: /examples/images/sphx_glr_plot_sample_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    C:\Users\user\Desktop\sphinx_example\doc\examples\plot_sample.py:67: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()
    The data was generated from (random_state=716):
    Class   P(C)    P(w0|C) P(w1|C)
    red     0.25    0.81    0.19
    blue    0.20    0.23    0.77
    yellow  0.55    0.32    0.68





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.118 seconds)


.. _sphx_glr_download_examples_plot_sample.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_sample.py <plot_sample.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_sample.ipynb <plot_sample.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
